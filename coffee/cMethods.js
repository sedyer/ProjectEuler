// Generated by CoffeeScript 2.0.2
(function() {
  var comparator, findPythagoreanTripletWithGivenSum, getAllFactorPairs, getTriplet, getTripletsFromFactorPairs, getUniqueElements, getUniqueFactorPairs, getValidTriplets, sortTuples;

  findPythagoreanTripletWithGivenSum = function(sum, r = 2) {
    var factorPairs, rSquaredOverTwo, triplets, validTriplets;
    rSquaredOverTwo = (r * r) / 2;
    factorPairs = getUniqueFactorPairs(rSquaredOverTwo);
    triplets = getTripletsFromFactorPairs(r, factorPairs);
    validTriplets = getValidTriplets(sum, triplets);
    if (validTriplets.length > 0) {
      return validTriplets[0];
    }
    if (r > sum / 3) {
      return [-1, -1, -1];
    }
    return findPythagoreanTripletWithGivenSum(sum, r + 2);
  };

  getValidTriplets = function(sum, array) {
    return array.filter(function(x) {
      return x.reduce(function(x, y) {
        return x + y;
      }) === sum;
    });
  };

  getTripletsFromFactorPairs = function(r, array) {
    return array.map(function(x) {
      return getTriplet(r, x);
    });
  };

  getTriplet = function(r, x) {
    return [r + x[0], r + x[1], r + x[0] + x[1]];
  };

  getUniqueFactorPairs = function(num) {
    return getUniqueElements(sortTuples(getAllFactorPairs(num)));
  };

  getAllFactorPairs = function(num) {
    return Array.from(new Array(num), function(x, i) {
      return i + 1;
    }).filter(function(x) {
      return num % x === 0;
    }).map(function(x) {
      return [x, num / x];
    });
  };

  comparator = function(x, y) {
    if (x[0] === y[0]) {
      0;
    }
    if (x[0] < y[0]) {
      -1;
    }
    return 1;
  };

  sortTuples = function(array) {
    return array.map(function(x) {
      return x.sort(function(x, y) {
        return x > y;
      });
    }).sort(function(x, y) {
      return comparator(x, y);
    });
  };

  getUniqueElements = function(array) {
    var tmp;
    tmp = [];
    return array.filter(function(x) {
      if (tmp.indexOf(x.toString()) < 0) {
        tmp.push(x.toString());
        return x;
      }
    });
  };

  module.exports = {
    findPythagoreanTripletWithGivenSum: findPythagoreanTripletWithGivenSum
  };

}).call(this);
